{"version":3,"file":"static/js/297.4ccd424a.chunk.js","mappings":"2PAEaA,EAAsBC,EAAAA,GAAAA,KAAH,oFAMnBC,EAAoBD,EAAAA,GAAAA,MAAH,8CAIjBE,EAAoBF,EAAAA,GAAAA,MAAH,qFAMjBG,EAAqBH,EAAAA,GAAAA,OAAH,qF,kBC6D/B,EAzEqB,WACnB,OAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,IAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAACC,GACpB,OAAOA,EAAEC,OAAOC,MACd,IAAK,OACHV,EAAYQ,EAAEC,OAAOE,OACrB,MACF,IAAK,QACHT,EAAaM,EAAEC,OAAOE,OACtB,MACF,IAAK,WACHP,EAAgBI,EAAEC,OAAOE,OACzB,MACF,QAAS,OAEZ,EAiCD,OAEE,UAAClB,EAAD,CAAqBmB,SAjCF,SAACJ,GACpBA,EAAEK,iBACF,IAAMC,EAAON,EAAEC,OACTM,EAAO,CACXL,KAAMX,EACNiB,MAAOf,EACPgB,SAAUd,GAEZ,MAAgB,KAAbJ,GAAiC,KAAdE,GAAqC,KAAjBE,EACjCe,EAAAA,OAAAA,QACD,uBACA,6BACA,QAGLf,EAAagB,OAAS,EAChBD,EAAAA,OAAAA,QACL,WACA,kCACA,SAIFb,GAASe,EAAAA,EAAAA,IAASL,IAClBD,EAAKO,QACLrB,EAAY,IACZE,EAAa,SACbE,EAAgB,IAEnB,EAIC,WACG,UAACT,EAAD,mBAED,SAACC,EAAD,CAAmB0B,KAAK,OAAOZ,KAAK,OAAOa,SAAUhB,QAEvD,UAACZ,EAAD,oBAEE,SAACC,EAAD,CAAmB0B,KAAK,QAAQZ,KAAK,QAAQa,SAAUhB,QAEzD,UAACZ,EAAD,uBAEE,SAACC,EAAD,CAAmB0B,KAAK,WAAWZ,KAAK,WAAWa,SAAUhB,EAAciB,UAAU,UAEvF,SAAC3B,EAAD,CAAoByB,KAAK,SAAzB,4BAIH,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegisterFormSection = styled.form`\nmax-width: 320px;\ndisplay: flex;\nflex-direction: column;\n`;\n\nexport const RegisterFormLabel = styled.label`\nmargin-bottom: 16px;\n`;\n\nexport const RegisterFormInput = styled.input`\nwidth: 100%;\n        padding: 4px;\n        font: inherit;\n`;\n\nexport const RegisterFormButton = styled.button`\nwidth: 100%;\n        padding: 4px;\n        font: inherit;\n`;","\nimport { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/operations'\nimport { RegisterFormSection, RegisterFormLabel, RegisterFormInput, RegisterFormButton} from './RegisterForm.styled'\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nconst RegisterForm = () => {\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const dispatch = useDispatch()\n// console.log(userPassword.length)\n  const handleChange = (e) => {\n    switch(e.target.name){\n      case 'name':\n        setUserName(e.target.value)\n        break;\n      case 'email':\n        setUserEmail(e.target.value)\n        break;\n      case 'password':\n        setUserPassword(e.target.value)\n        break;\n      default: return;\n    }\n  }\n\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    const form = e.target;\n    const user = {\n      name: userName,\n      email: userEmail,\n      password: userPassword\n    };\n    if(userName === \"\" && userEmail === \"\" && userPassword === \"\"){\n      return Report.failure(\n            'Something went wrong',\n            'Please fill in all fields!',\n            'Okay'\n          );\n    } \n    if(userPassword.length < 7){\n      return Report.failure(\n        'PASSWORD',\n        'minimum length is 7 characters!',\n        'Okay'\n      );\n    }\n    else {\n      dispatch(register(user))\n      form.reset();\n      setUserName('');\n      setUserEmail('')\n      setUserPassword('')\n    }\n  }\n\n  return (\n\n    <RegisterFormSection onSubmit={handleSubmit}>\n       <RegisterFormLabel>\n      Name\n      <RegisterFormInput type=\"text\" name=\"name\" onChange={handleChange}/>\n    </RegisterFormLabel>\n    <RegisterFormLabel>\n      Email\n      <RegisterFormInput type=\"email\" name=\"email\" onChange={handleChange}/>\n    </RegisterFormLabel>\n    <RegisterFormLabel>\n      Password\n      <RegisterFormInput type=\"password\" name=\"password\" onChange={handleChange} minlength=\"7\"/>\n    </RegisterFormLabel>\n    <RegisterFormButton type=\"submit\">Registration</RegisterFormButton>\n  </RegisterFormSection>\n\n  );\n}\n\nexport default RegisterForm;\n"],"names":["RegisterFormSection","styled","RegisterFormLabel","RegisterFormInput","RegisterFormButton","useState","userName","setUserName","userEmail","setUserEmail","userPassword","setUserPassword","dispatch","useDispatch","handleChange","e","target","name","value","onSubmit","preventDefault","form","user","email","password","Report","length","register","reset","type","onChange","minlength"],"sourceRoot":""}