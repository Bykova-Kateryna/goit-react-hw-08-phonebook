{"version":3,"file":"static/js/126.18f2ccf6.chunk.js","mappings":"2QAEaA,EAAqBC,EAAAA,GAAAA,IAAH,0DAKlBC,EAAmBD,EAAAA,GAAAA,KAAH,wYAgBhBE,EAAiBF,EAAAA,GAAAA,MAAH,0KASdG,EAAiBH,EAAAA,GAAAA,MAAH,yQAadI,EAAkBJ,EAAAA,GAAAA,OAAH,8V,mBCwB5B,EAzDkB,WAChB,OAAkCK,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,OAAf,IAE3BI,EAAe,SAAAC,GACnB,OAAQA,EAAEC,OAAOC,MACf,IAAK,QACHZ,EAAaU,EAAEC,OAAOE,OACtB,MACF,IAAK,WACHX,EAAgBQ,EAAEC,OAAOE,OACzB,MACF,QACE,OAEL,EAmBD,OACE,SAACrB,EAAD,UACGa,GAAU,SAACS,EAAA,EAAD,KAAY,UAACpB,EAAD,CAAkBqB,SAnBxB,SAAAL,GACnBA,EAAEM,iBACF,IAAMC,EAAOP,EAAEC,OACTO,EAAO,CACXC,MAAOpB,EACPqB,SAAUnB,GAEZ,GAAkB,KAAdF,GAAqC,KAAjBE,EACtB,OAAOoB,EAAAA,OAAAA,QAAe,8BAEtBlB,GAASmB,EAAAA,EAAAA,IAAMJ,IACfD,EAAKM,QACLvB,EAAa,IACbE,EAAgB,GAEnB,EAI0B,WACrB,UAACP,EAAD,oBAEE,SAACC,EAAD,CAAgB4B,KAAK,QAAQZ,KAAK,QAAQa,SAAUhB,QAEtD,UAACd,EAAD,uBAEE,SAACC,EAAD,CACE4B,KAAK,WACLZ,KAAK,WACLa,SAAUhB,QAGd,SAACZ,EAAD,CAAiB2B,KAAK,SAAtB,uBAIP,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoginFormContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n`;\n\nexport const LoginFormSection = styled.form`\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  max-width: 400px;\n  padding: 60px 50px;\n  margin: 50px auto 0;\n  background-image: linear-gradient(\n      rgba(47, 48, 58, 0.6),\n      rgba(47, 48, 58, 0.6)\n    ),\n    url(https://cdn-icons-png.flaticon.com/512/2885/2885526.png);\n  background-position: center;\n  background-size: cover;\n`;\n\nexport const LoginFormLabel = styled.label`\n  display: block;\n  padding-left: 15px;\n  font-family: 'Roboto', sans-serif;\n  color: #fff;\n  text-transform: uppercase;\n  font-size: 14px;\n`;\n\nexport const LoginFormInput = styled.input`\n  display: block;\n  width: 100%;\n  padding: 0 15px;\n  margin: 10px 0 15px;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  color: white;\n  background: rgba(255, 255, 255, 0.2);\n  font-family: 'Roboto', sans-serif;\n`;\n\nexport const LoginFormButton = styled.button`\n  width: 30%;\n  padding: 8px;\n  font-family: 'Roboto', sans-serif;\n  text-transform: uppercase;\n  border-radius: 20px;\n  border-width: 0;\n  background: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n  margin-left: auto;\n  margin-right: auto;\n\n  &:hover,\n  &:focus {\n    background: #fff;\n    color: #00d0ff;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from '../../redux/operations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  LoginFormSection,\n  LoginFormLabel,\n  LoginFormInput,\n  LoginFormButton,\n  LoginFormContainer,\n} from './LoginForm.styled';\nimport { Loader } from 'components/Loader/Loader';\nconst LoginForm = () => {\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.auth.loading)\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'email':\n        setUserEmail(e.target.value);\n        break;\n      case 'password':\n        setUserPassword(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const user = {\n      email: userEmail,\n      password: userPassword,\n    };\n    if (userEmail === '' && userPassword === '') {\n      return Notify.failure('Please fill in all fields!');\n    } else {\n      dispatch(logIn(user));\n      form.reset();\n      setUserEmail('');\n      setUserPassword('');\n    }\n  };\n\n  return (\n    <LoginFormContainer>\n      {loading ? <Loader/> : <LoginFormSection onSubmit={handleSubmit}>\n        <LoginFormLabel>\n          Email\n          <LoginFormInput type=\"email\" name=\"email\" onChange={handleChange} />\n        </LoginFormLabel>\n        <LoginFormLabel>\n          Password\n          <LoginFormInput\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n          />\n        </LoginFormLabel>\n        <LoginFormButton type=\"submit\">Login</LoginFormButton>\n      </LoginFormSection>}\n    </LoginFormContainer>\n  );\n};\n\nexport default LoginForm;\n"],"names":["LoginFormContainer","styled","LoginFormSection","LoginFormLabel","LoginFormInput","LoginFormButton","useState","userEmail","setUserEmail","userPassword","setUserPassword","dispatch","useDispatch","loading","useSelector","state","auth","handleChange","e","target","name","value","Loader","onSubmit","preventDefault","form","user","email","password","Notify","logIn","reset","type","onChange"],"sourceRoot":""}