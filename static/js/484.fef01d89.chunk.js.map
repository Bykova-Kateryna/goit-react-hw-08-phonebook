{"version":3,"file":"static/js/484.fef01d89.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.stysed.js","components/Loader/LoaderFromButtonAdd.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/Loader/Loader.jsx","components/Loader/LoaderFromButtonDelete.jsx","components/ContactList/ContactList.jsx","components/Phonebook/Phonebook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactFofmSection = styled.div`\n  background-color: #fff;\n  max-width: 350px;\n  text-align: center;\n  padding: 15px;\n  box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(255, 255, 255),\n    0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const Fofm = styled.form`\n  border: 10px solid transparent;\n  color: #605756;\n`;\n\nexport const FormLabel = styled.label`\n  margin-right: 15px;\n`;\n\nexport const FormInput = styled.input`\n  width: 75%;\n  &:hover,\n  &:focus {\n    border: 2px solid #1d88c5;\n  }\n`;\nexport const FormBtn = styled.button`\n  margin-top: 15px;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background-color: #1d88c5;\n  }\n`;","import { ProgressBar } from 'react-loader-spinner';\nexport const LoaderFromButtonAdd = () => {\n  return (\n    <div>\n      <p>add contact...</p>\n      <ProgressBar\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"progress-bar-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"progress-bar-wrapper\"\n        borderColor=\"#000\"\n        barColor=\"#51E5FF\"\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport { nanoid } from 'nanoid';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport {\n  ContactFofmSection,\n  Fofm,\n  FormLabel,\n  FormInput,\n  FormBtn,\n} from './ContactForm.stysed';\nimport { LoaderFromButtonAdd } from '../Loader/LoaderFromButtonAdd';\n\nfunction PhoneBookForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.phonebook.items);\n  const loading = useSelector(state => state.phonebook.isLoading);\n  const actionType = useSelector(state => state.phonebook.actionTypeStatus);\n\n  const contactNameId = nanoid();\n  const contactTellId = nanoid();\n\n  const findName = name => {\n    return contacts.find(contact => {\n      const nameInContacts = contact.name.toLocaleLowerCase();\n      const newName = name.toLocaleLowerCase();\n      return nameInContacts === newName;\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const addName = {\n      name: form.elements.name.value,\n      phone: form.elements.number.value,\n    };\n    if (findName(form.elements.name.value)) {\n      return Report.failure(\n        'Something went wrong',\n        'This name is already in the contact list!',\n        'Okay'\n      );\n    } else {\n      dispatch(addContact(addName));\n      form.reset();\n    }\n  };\n\n  return (\n    <ContactFofmSection>\n      <Fofm onSubmit={handleSubmit}>\n        <div>\n          <FormLabel htmlFor={contactNameId}>Name</FormLabel>\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id={contactNameId}\n          />\n        </div>\n        <div>\n          <FormLabel htmlFor={contactTellId}>Number</FormLabel>\n          <FormInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            id={contactTellId}\n          />\n        </div>\n        {loading && actionType === 'contacts/addContact/pending' ? (\n          <LoaderFromButtonAdd />\n        ) : (\n          <FormBtn type=\"submit\">Add contact</FormBtn>\n        )}\n      </Fofm>\n    </ContactFofmSection>\n  );\n}\n\nexport default PhoneBookForm;\n","import styled from 'styled-components';\n\nexport const FilterSection = styled.div`\nbackground-color: #fff;\npadding: 15px;\nbox-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(255, 255, 255),\n  0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\nmargin-top: 15px;\nmargin-bottom: 15px;\nmax-width: 350px;\n`;\n\nexport const FilterSectionLabel = styled.label`\ndisplay: flex;\n`;\n\nexport const FilterSectionInput = styled.input`\nwidth: 100%;\n&:hover,\n&:focus {\n  border: 2px solid #1d88c5;\n}\n`;","import { useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/slice';\nimport { nanoid } from 'nanoid';\nimport {\n  FilterSection,\n  FilterSectionLabel,\n  FilterSectionInput,\n} from './Filter.styled';\n\nconst contactFindId = nanoid();\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(filterContact(event.currentTarget.value));\n  };\n  return (\n    <FilterSection>\n      <FilterSectionLabel htmlFor={contactFindId}>\n        Find contacts by name\n      </FilterSectionLabel>\n      <FilterSectionInput\n        type=\"text\"\n        name=\"filter\"\n        id={contactFindId}\n        onChange={handleChange}\n      />\n    </FilterSection>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactListSection = styled.ol`\n  background-color: #fff;\n  padding-rigth: 25px;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(255, 255, 255),\n    0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n  margin-top: 15px;\n  max-width: 350px;\n`;\n\nexport const ContactListItem = styled.li`\n  margin-top: 15px;\n  display: flex;\n`;\n\nexport const ContactListItemContext = styled.p`\n  margin-right: 15px;\n`;\n\nexport const DeleteBtn = styled.button`\n  cursor: pointer;\n  border-radius: 5px;\n  &:hover,\n  &:focus {\n    background-color: #1d88c5;\n  }\n`;\nexport const ErrorMesage = styled.p`\n  color: #ff1900;\n  text-transform: uppercase;\n  text-decoration: underline overline #ff3028;\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <div>\n      <MagnifyingGlass\n        visible={true}\n        height=\"40\"\n        width=\"40\"\n        ariaLabel=\"MagnifyingGlass-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"MagnifyingGlass-wrapper\"\n        glassColor=\"#c0efff\"\n        color=\"#000\"\n      />\n    </div>\n  );\n};\n","import { Watch } from 'react-loader-spinner';\nexport const LoaderFromButtonDelete = () => {\n  return (\n    <div>\n      <Watch\n        height=\"20\"\n        width=\"20\"\n        radius=\"48\"\n        color=\"#000\"\n        ariaLabel=\"watch-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/operations';\nimport { useEffect, useState } from 'react';\nimport {\n  ContactListSection,\n  ContactListItem,\n  DeleteBtn,\n  ErrorMesage,\n  ContactListItemContext,\n} from './ContactList.styled';\nimport { fetchContacts } from '../../redux/operations';\nimport { Loader } from '../Loader/Loader';\nimport { LoaderFromButtonDelete } from '../Loader/LoaderFromButtonDelete';\n\nexport const ContactList = () => {\n  const [onClick, setOnClick] = useState(false);\n  const contacts = useSelector(state => state.phonebook.items);\n  const loading = useSelector(state => state.phonebook.isLoading);\n  const error = useSelector(state => state.phonebook.error);\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const actionType = useSelector(state => state.phonebook.actionTypeStatus);\n\n  const filterContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n\n    const normalizedNameFilter = filter.toLocaleLowerCase();\n    const filteredName = contacts.filter(({ name }) => {\n      const normalizedName = name.toLocaleLowerCase();\n      const filterResult = normalizedName.includes(normalizedNameFilter);\n      return filterResult;\n    });\n    return filteredName;\n  };\n\n  return (\n    <>\n      {loading && actionType === 'contacts/fetchAll/pending' && <Loader />}\n      {error && (\n        <ErrorMesage>oops, something went wrong, change the side.</ErrorMesage>\n      )}\n      <ContactListSection>\n        {contacts.length !== 0 &&\n          filterContacts().map(item => (\n            <ContactListItem key={item.id}>\n              <ContactListItemContext>\n                {item.name}: {item.phone}\n              </ContactListItemContext>\n              {loading &&\n              actionType === 'contacts/deleteContact/pending' &&\n              onClick &&\n              onClick === item.id ? (\n                <LoaderFromButtonDelete />\n              ) : (\n                <DeleteBtn\n                  type=\"button\"\n                  onClick={() => {\n                    dispatch(deleteContact(item.id));\n                    setOnClick(item.id);\n                  }}\n                >\n                  Delete\n                </DeleteBtn>\n              )}\n            </ContactListItem>\n          ))}\n      </ContactListSection>\n    </>\n  );\n};\n","import React from 'react';\nimport PhoneBookForm from '../ContactForm/ContactForm';\nimport { Filter } from '../Filter/Filter';\nimport { ContactList } from '../ContactList/ContactList';\n\nexport default function PhoneBookSection() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <PhoneBookForm />\n      <div>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n}\n"],"names":["ContactFofmSection","styled","Fofm","FormLabel","FormInput","FormBtn","LoaderFromButtonAdd","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","dispatch","useDispatch","contacts","useSelector","state","phonebook","items","loading","isLoading","actionType","actionTypeStatus","contactNameId","nanoid","contactTellId","onSubmit","event","preventDefault","name","form","target","addName","elements","value","phone","number","find","contact","toLocaleLowerCase","Report","addContact","reset","htmlFor","type","pattern","title","required","id","FilterSection","FilterSectionLabel","FilterSectionInput","contactFindId","Filter","onChange","filterContact","currentTarget","ContactListSection","ContactListItem","ContactListItemContext","DeleteBtn","ErrorMesage","Loader","visible","glassColor","color","LoaderFromButtonDelete","radius","wrapperClassName","ContactList","useState","onClick","setOnClick","error","filter","useEffect","fetchContacts","length","normalizedNameFilter","includes","filterContacts","map","item","deleteContact","PhoneBookSection"],"sourceRoot":""}