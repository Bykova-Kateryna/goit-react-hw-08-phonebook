{"version":3,"file":"static/js/126.42b578eb.chunk.js","mappings":"oQAEaA,EAAmBC,EAAAA,GAAAA,KAAH,oFAMhBC,EAAiBD,EAAAA,GAAAA,MAAH,8CAIdE,EAAiBF,EAAAA,GAAAA,MAAH,qFAMdG,EAAkBH,EAAAA,GAAAA,OAAH,qF,SC0C5B,EAtDkB,WAChB,OAAkCI,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAACC,GACpB,OAAOA,EAAEC,OAAOC,MACd,IAAK,QACHR,EAAaM,EAAEC,OAAOE,OACtB,MACF,IAAK,WACHP,EAAgBI,EAAEC,OAAOE,OACzB,MACF,QAAS,OAEZ,EAoBD,OACF,0BACA,UAAChB,EAAD,YACM,UAACE,EAAD,CAAgBe,SArBD,SAACJ,GAClBA,EAAEK,iBACF,IAAMC,EAAON,EAAEC,OACTM,EAAO,CACXC,MAAOf,EACPgB,SAAUd,GAEZ,GAAiB,KAAdF,GAAqC,KAAjBE,EACrB,OAAOe,EAAAA,OAAAA,QAAe,8BAGtBb,GAASc,EAAAA,EAAAA,IAAMJ,IACfD,EAAKM,QACLlB,EAAa,IACbE,EAAgB,GAEnB,EAKG,mBAEE,SAACN,EAAD,CAAgBuB,KAAK,QAAQX,KAAK,QAAQY,SAAUf,QAEtD,UAACV,EAAD,uBAEE,SAACC,EAAD,CAAgBuB,KAAK,WAAWX,KAAK,WAAWY,SAAUf,QAE5D,SAACR,EAAD,CAAiBsB,KAAK,SAAtB,uBAML,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoginFormSection = styled.form`\nmax-width: 320px;\ndisplay: flex;\nflex-direction: column;\n`;\n\nexport const LoginFormLabel = styled.label`\nmargin-bottom: 16px;\n`;\n\nexport const LoginFormInput = styled.input`\nwidth: 100%;\n        padding: 4px;\n        font: inherit;\n`;\n\nexport const LoginFormButton = styled.button`\nwidth: 100%;\n        padding: 4px;\n        font: inherit;\n`;","\nimport { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/operations'\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { LoginFormSection, LoginFormLabel, LoginFormInput, LoginFormButton} from './LoginForm.styled'\nconst LoginForm = () => {\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const dispatch = useDispatch()\n\n  const handleChange = (e) => {\n    switch(e.target.name){\n      case 'email':\n        setUserEmail(e.target.value)\n        break;\n      case 'password':\n        setUserPassword(e.target.value)\n        break;\n      default: return;\n    }\n  }\n  \nconst handleSubmit = (e) =>{\n    e.preventDefault();\n    const form = e.target;\n    const user = {\n      email: userEmail,\n      password: userPassword\n    };\n    if(userEmail === \"\" && userPassword === \"\"){\n      return Notify.failure('Please fill in all fields!');\n    }\n    else {\n      dispatch(logIn(user))\n      form.reset();\n      setUserEmail('')\n      setUserPassword('')\n    }\n  }\n\n  return (\n<div>\n<LoginFormSection>\n      <LoginFormLabel onSubmit={handleSubmit}>\n        Email\n        <LoginFormInput type=\"email\" name=\"email\" onChange={handleChange}/>\n      </LoginFormLabel>\n      <LoginFormLabel>\n        Password\n        <LoginFormInput type=\"password\" name=\"password\" onChange={handleChange}/>\n      </LoginFormLabel>\n      <LoginFormButton type=\"submit\">Login</LoginFormButton>\n    </LoginFormSection>\n</div>\n    \n\n  );\n}\n\nexport default LoginForm;"],"names":["LoginFormSection","styled","LoginFormLabel","LoginFormInput","LoginFormButton","useState","userEmail","setUserEmail","userPassword","setUserPassword","dispatch","useDispatch","handleChange","e","target","name","value","onSubmit","preventDefault","form","user","email","password","Notify","logIn","reset","type","onChange"],"sourceRoot":""}